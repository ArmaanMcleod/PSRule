variables:
  # Avoid expensive initialization of dotnet cli, see: https://donovanbrown.com/post/Stop-wasting-time-during-NET-Core-builds
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  isManualBuild: $[eq(variables['Build.Reason'], 'Manual')]
  version: '1.6.0'
  buildConfiguration: 'Release'
  disable.coverage.autogenerate: 'true'
  imageName: 'ubuntu-20.04'

# Use build number format, i.e. 1.6.0-B2010001
name: $(version)-B$(date:yyMM)$(rev:rrr)

stages:

- template: jobs/build.yaml
  parameters:
    artifact: PSRule
    artifactPath: out/modules/PSRule

- stage: Signing
  condition: eq(variables.isManualBuild, true)
  dependsOn: Build
  jobs:
  - template: jobs/signing.yaml

# - stage: Compliance
#   dependsOn:
#     - Signing
#     - Build
#   condition: in(dependencies.Signing.result, 'Succeeded', 'Skipped')
#   variables:
#     signingSucceeded: eq(dependencies.Signing.result, 'Succeeded')
#   jobs:
#     - job: Compliance
#       pool:
#         name: Package ES Standard Build
#         demands: DotNetFramework
#       variables:
#       - group: ESRP
#       steps:
#         - template: steps/releaseCompliance.yaml
#           parameters:
#             ${{ if ne(variables.signingSucceeded, true) }}:
#               artifact: unsigned

  # TODO: Automate release publication by implementing the template steps
  # - stage: Publish
  #   dependsOn:
  #     - Tests
  #     - Signing
  #   jobs:
  #     - deployment: PublishToGitHub
  #       displayName: Publish to GitHub
  #       environment: PSArm release approval
  #       strategy:
  #         runOnce:
  #           deploy:
  #             steps:
  #               - template: templates/steps/download.yaml
  #               - template: templates/steps/publishToGitHub.yaml
  #     - job: PublishToGallery
  #       displayName: Publish to PSGallery
  #       steps:
  #         - template: templates/steps/download.yaml
  #         - template: templates/steps/download.yaml